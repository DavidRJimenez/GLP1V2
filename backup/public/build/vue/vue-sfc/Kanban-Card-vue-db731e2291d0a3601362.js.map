{"version":3,"file":"/vue-sfc/Kanban-Card-vue-db731e2291d0a3601362.js","mappings":"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,6CAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,6CAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;AE3FN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,+CAA+C,mCAAmC;AAClF;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mEAAmE,0BAA0B;AAC7F;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA,oBAAoB;AACpB,qBAAqB;AACrB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,gBAAgB,UAAU,UAAU;;AAE5E;AACA;AACA,UAAU;AACV;AACA;AACA,4BAA4B;AAC5B,6BAA6B;AAC7B,gCAAgC;AAChC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8DAA8D,uBAAuB;AACrF,kCAAkC,IAAI,WAAW,KAAK,gFAAgF,kBAAkB;AACxJ;;AAEA;AACA;AACA,mBAAmB;AACnB,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,8DAA8D,uBAAuB;;AAErF;AACA,sEAAsE,WAAW,aAAa,2BAA2B,IAAI,cAAc,gBAAgB;AAC3J,4BAA4B,KAAK,WAAW,KAAK;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,2DAA2D,UAAU;AACrE;AACA,6BAA6B,eAAe;AAC5C;AACA,4DAA4D,IAAI,WAAW,0DAA0D;AACrI;AACA","sources":["webpack://@glpi/glpi/./node_modules/vue-loader/dist/exportHelper.js","webpack://@glpi/glpi/./js/src/vue/Kanban/Card.vue?3160","webpack://@glpi/glpi/./js/src/vue/Kanban/Card.vue?b631","webpack://@glpi/glpi/./js/src/vue/Kanban/Card.vue","webpack://@glpi/glpi/./js/src/vue/Kanban/Card.vue?4b00","webpack://@glpi/glpi/./js/src/vue/Kanban/Rights.js","webpack://@glpi/glpi/./js/src/vue/Kanban/TeamBadgeProvider.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { render } from \"./Card.vue?vue&type=template&id=5efa0808\"\nimport script from \"./Card.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Card.vue?vue&type=script&setup=true&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__file',\"js/src/vue/Kanban/Card.vue\"]])\n/* hot reload */\nif (module.hot) {\n  __exports__.__hmrId = \"5efa0808\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('5efa0808', __exports__)) {\n    api.reload('5efa0808', __exports__)\n  }\n  \n  module.hot.accept(\"./Card.vue?vue&type=template&id=5efa0808\", () => {\n    api.rerender('5efa0808', render)\n  })\n\n}\n\n\nexport default __exports__","export * from \"-!../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[1]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[4].use[0]!./Card.vue?vue&type=template&id=5efa0808\"","<script setup>\n    import {computed, nextTick, ref} from \"vue\";\n    import {Rights} from \"./Rights.js\";\n    import {TeamBadgeProvider} from \"./TeamBadgeProvider.js\";\n\n    const props = defineProps({\n        id: {\n            type: String,\n            required: true\n        },\n        read_only: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        title: {\n            type: String,\n            required: true\n        },\n        title_tooltip: {\n            type: String,\n            required: false,\n            default: undefined\n        },\n        icon: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        card_content: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        team: {\n            type: Object,\n            required: false,\n            default: () => {}\n        },\n        metadata: {\n            type: Object,\n            required: false,\n            default: () => {}\n        },\n        form_link: {\n            type: String,\n            required: false,\n            default: undefined\n        },\n        rights: {\n            type: Rights,\n            required: true\n        },\n        team_badge_provider: {\n            type: TeamBadgeProvider,\n            required: true\n        },\n        due_date: {\n            type: String,\n            required: false,\n            default: undefined\n        }\n    });\n\n    const emit = defineEmits([\n        'kanban:card_delete', 'kanban:card_restore', 'kanban:card_show_details'\n    ]);\n    const is_deleted = computed(() => {\n        return !!(props.metadata.is_deleted || 0);\n    });\n    const card_overflow_dropdown = ref(null);\n    const btn_overflow = ref(null);\n\n    const render_badges = ref(true);\n    const badges_to_show = computed(() => {\n        if (!render_badges.value) {\n            return [];\n        }\n        const members = Object.values(props.team).slice(0, props.team_badge_provider.max_team_images);\n        $.each(members, (i, member) => {\n            member.content = props.team_badge_provider.getTeamBadge(member);\n            member.hash = props.team_badge_provider.getTeamBadgeHash(member);\n        });\n        return members;\n    });\n\n    $(props.team_badge_provider.event_target).on('kanban:team_badge:changed', () => {\n        render_badges.value = false;\n        nextTick(() => {\n            render_badges.value = true;\n        });\n    });\n</script>\n\n<template>\n    <li :id=\"id\" :class=\"`kanban-item card shadow-none ${read_only ? 'readonly' : ''} ${is_deleted ? 'deleted' : ''}`\">\n        <div class=\"kanban-item-header d-flex justify-content-between\">\n            <span class=\"kanban-item-title d-flex align-items-center\">\n                <i :class=\"icon\"></i>\n                <span class=\"cursor-pointer\" v-text=\"title\" @click=\"emit('kanban:card_show_details')\"></span>\n            </span>\n            <div class=\"dropdown\">\n                <button type=\"button\" class=\"kanban-item-overflow-actions cursor-pointer pt-0 b-0\"\n                        data-bs-toggle=\"dropdown\" data-bs-auto-close=\"outside\">\n                    <i class=\"ti ti-dots\" ref=\"btn_overflow\"></i>\n                </button>\n                <ul ref=\"card_overflow_dropdown\" class=\"kanban-dropdown dropdown-menu\" role=\"menu\">\n                    <li class=\"kanban-item-goto dropdown-item\" v-if=\"form_link\">\n                        <a :href=\"form_link\" class=\"w-100\">\n                            <i class=\"ti ti-share-3\"></i>{{ __('Go to') }}\n                        </a>\n                    </li>\n                    <li class=\"kanban-item-restore dropdown-item cursor-pointer\" v-if=\"rights.canDeleteItem() && is_deleted\"\n                        @click=\"emit('kanban:card_restore')\">\n                        <span>\n                            <i class=\"ti ti-trash-off\"></i>{{ __('Restore') }}\n                        </span>\n                    </li>\n                    <li class=\"kanban-item-remove dropdown-item cursor-pointer\" v-if=\"rights.canDeleteItem()\"\n                        @click=\"emit('kanban:card_delete')\">\n                        <span>\n                            <i class=\"ti ti-trash\"></i>{{ is_deleted ? __('Purge') : __('Delete') }}\n                        </span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        <div v-if=\"metadata.content\" class=\"kanban-description-preview\" v-text=\"metadata.content\"></div>\n        <div class=\"kanban-item-content\" v-html=\"card_content\"></div>\n        <div class=\"d-flex justify-content-between\">\n            <div class=\"kanban-item-team position-relative\">\n                <span v-for=\"member in badges_to_show\" :key=\"member.hash\"\n                      v-html=\"member.content\"></span>\n                <span v-if=\"Object.values(team).length > team_badge_provider.max_team_images\"\n                      v-html=\"team_badge_provider.generateOverflowBadge(Object.values(team).length - team_badge_provider.max_team_images)\"></span>\n            </div>\n            <div class=\"align-self-center kanban-item-due-date\">\n                <span v-if=\"due_date\" :title=\"__('Planned end date')\">\n                    <i class=\"ti ti-calendar\"></i>\n                    <span v-text=\"due_date\"></span>\n                </span>\n            </div>\n        </div>\n    </li>\n</template>\n","export { default } from \"-!../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[4].use[0]!./Card.vue?vue&type=script&setup=true&lang=js\"; export * from \"-!../../../../node_modules/vue-loader/dist/index.js??ruleSet[1].rules[4].use[0]!./Card.vue?vue&type=script&setup=true&lang=js\"","/**\n * ---------------------------------------------------------------------\n *\n * GLPI - Gestionnaire Libre de Parc Informatique\n *\n * http://glpi-project.org\n *\n * @copyright 2015-2025 Teclib' and contributors.\n * @copyright 2003-2014 by the INDEPNET Development Team.\n * @licence   https://www.gnu.org/licenses/gpl-3.0.html\n *\n * ---------------------------------------------------------------------\n *\n * LICENSE\n *\n * This file is part of GLPI.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * ---------------------------------------------------------------------\n */\n\n/**\n * Kanban rights structure\n * @since 10.0.0\n */\nexport class Rights {\n    constructor(rights) {\n        /**\n         * If true, then a button will be added to each column to allow new items to be added.\n         * When an item is added, a request is made via AJAX to create the item in the DB.\n         * Permissions are re-checked server-side during this request.\n         * Users will still be limited by the {@link create_card_limited_columns} right both client-side and server-side.\n         * @since 9.5.0\n         * @since 10.0.0 Moved to new rights class\n         * @type {boolean}\n         */\n        this.create_item = rights['create_item'] || false;\n\n        /**\n         * If true, then a button will be added to each card to allow deleting them and the underlying item directly from the kanban.\n         * When a card is deleted, a request is made via AJAX to delete the item in the DB.\n         * Permissions are re-checked server-side during this request.\n         * @since 10.0.0\n         * @type {boolean}\n         */\n        this.delete_item = rights['delete_item'] || false;\n\n        /**\n         * If true, then a button will be added to the add column form that lets the user create a new column.\n         * For Projects as an example, it would create a new project state.\n         * Permissions are re-checked server-side during this request.\n         * @since 9.5.0\n         * @since 10.0.0 Moved to new rights class\n         * @type {boolean}\n         */\n        this.create_column = rights['create_column'] || false;\n\n        /**\n         * Global permission for being able to modify the Kanban state/view.\n         * This includes the order of cards in the columns.\n         * @since 9.5.0\n         * @since 10.0.0 Moved to new rights class\n         * @type {boolean}\n         */\n        this.modify_view = rights['modify_view'] || false;\n\n        /**\n         * Limits the columns that the user can add cards to.\n         * By default, it is empty which allows cards to be added to all columns.\n         * If you don't want the user to add cards to any column, {@link rights.create_item} should be false.\n         * @since 9.5.0\n         * @since 10.0.0 Moved to new rights class\n         * @type {Array}\n         */\n        this.create_card_limited_columns = rights['create_card_limited_columns'] || [];\n\n        /**\n         * Global right for ordering cards.\n         * @since 9.5.0\n         * @since 10.0.0 Moved to new rights class\n         * @type {boolean}\n         */\n        this.order_card = rights['order_card'] || false;\n    }\n\n    /** @see this.create_item */\n    canCreateItem() {\n        return this.create_item;\n    }\n\n    /** @see this.delete_item */\n    canDeleteItem() {\n        return this.delete_item;\n    }\n\n    /** @see this.create_column */\n    canCreateColumn() {\n        return this.create_column;\n    }\n\n    /** @see this.modify_view */\n    canModifyView() {\n        return this.modify_view;\n    }\n\n    /** @see this.order_card */\n    canOrderCard() {\n        return this.order_card;\n    }\n\n    /** @see this.create_card_limited_columns */\n    getAllowedColumnsForNewCards() {\n        return this.create_card_limited_columns;\n    }\n}\n","/**\n * ---------------------------------------------------------------------\n *\n * GLPI - Gestionnaire Libre de Parc Informatique\n *\n * http://glpi-project.org\n *\n * @copyright 2015-2025 Teclib' and contributors.\n * @copyright 2003-2014 by the INDEPNET Development Team.\n * @licence   https://www.gnu.org/licenses/gpl-3.0.html\n *\n * ---------------------------------------------------------------------\n *\n * LICENSE\n *\n * This file is part of GLPI.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * ---------------------------------------------------------------------\n */\n\n/* global tinycolor */\nexport class TeamBadgeProvider {\n    constructor(display_initials, max_team_images = 3) {\n        this.badges = {\n            User: {},\n            Group: {},\n            Supplier: {},\n            Contact: {}\n        };\n        this.user_pictures_to_load = new Set([]);\n        this.dark_theme = $('html').attr('data-glpi-theme-dark') === '1';\n        /**\n         * The size in pixels for the team badges\n         * @type {number}\n         */\n        this.team_image_size = 26;\n        this.max_team_images = max_team_images;\n        this.display_initials = display_initials;\n\n        /**\n         * The event target to use to dispatch and listen for events from this cache including for when a new user picture is loaded and the badge is ready to be re-fetched.\n         * @type {EventTarget}\n         */\n        this.event_target = new EventTarget();\n    }\n\n    /**\n     * Get a hash for the team member's badge.\n     * This can be used to determine if the content of the badge has changed such as when the image isn't loaded initially, but is loaded later.\n     * @param team_member The team member\n     * @return {string} The hash\n     */\n    getTeamBadgeHash(team_member) {\n        const itemtype = team_member[\"itemtype\"];\n        const items_id = team_member[\"id\"];\n        const content = this.getTeamBadge(team_member);\n        return btoa(itemtype + items_id + content).slice(0, 8);\n    }\n\n    /**\n     * Gets the badge to show for the given team member.\n     * If the badge wasn't generated before, it will be done at this time and cached for later use.\n     * @param {{}} team_member The team member\n     * @returns {string} HTML image or icon\n     */\n    getTeamBadge(team_member) {\n        const itemtype = team_member[\"itemtype\"];\n        const items_id = team_member[\"id\"];\n\n        // If the picture is already cached, return cache value\n        if (this.badges[itemtype] !== undefined && this.badges[itemtype][items_id] !== undefined) {\n            return this.badges[itemtype][items_id];\n        }\n\n        // Pictures from users\n        if (itemtype === 'User') {\n            // Display a placeholder and keep track of the image to load it later\n            this.user_pictures_to_load.add(items_id);\n            this.badges[itemtype][items_id] = this.generateUserBadge(team_member);\n\n            return this.badges[itemtype][items_id];\n        }\n\n        // Pictures from groups, supplier, contact\n        switch (itemtype) {\n            case 'Group':\n                this.badges[itemtype][items_id] = this.generateOtherBadge(team_member, 'ti ti-users-group');\n                break;\n            case 'Supplier':\n                this.badges[itemtype][items_id] = this.generateOtherBadge(team_member, 'ti ti-truck-loading');\n                break;\n            case 'Contact':\n                this.badges[itemtype][items_id] = this.generateOtherBadge(team_member, 'ti ti-user');\n                break;\n            default:\n                this.badges[itemtype][items_id] = this.generateOtherBadge(team_member, 'ti ti-user');\n        }\n        return this.badges[itemtype][items_id];\n    }\n\n    /**\n     * Attempt to load the user pictures that were previously determined to be needed when a badge was requested.\n     */\n    fetchRequiredUserPictures() {\n        // Get user ids for which we must load their pictures\n        const users_ids = Array.from(this.user_pictures_to_load.values());\n\n        if (users_ids.length === 0) {\n            // Nothing to be loaded\n            return;\n        }\n\n        // Clear \"to load\" list\n        this.user_pictures_to_load.clear();\n\n        $.ajax({\n            type: 'POST', // Too much data may break GET limit\n            url: `${CFG_GLPI['root_doc']}/ajax/getUserPicture.php`,\n            data: {\n                users_id: users_ids,\n                size: this.team_image_size,\n            }\n        }).done((data) => {\n            const to_reload = [];\n            Object.keys(users_ids).forEach((user_id) => {\n                if (data[user_id] !== undefined) {\n                    // Store new image in cache\n                    this.badges['User'][user_id] = `<span>${data[user_id]}</span>`;\n                    to_reload.push(user_id);\n                }\n            });\n            this.event_target.dispatchEvent(new CustomEvent('kanban:team_badge:changed', {\n                detail: {\n                    User: to_reload\n                }\n            }));\n        });\n    }\n\n    /**\n     * Compute a new badge color or retrieve the cached color from session storage.\n     * @param team_member The team member\n     * @returns {string} The color to use for the badge\n     */\n    getBadgeColor(team_member) {\n        let cached_colors = JSON.parse(window.sessionStorage.getItem('badge_colors'));\n        const itemtype = team_member['itemtype'];\n        const baseColor = Math.random();\n        const lightness = (Math.random() * 10) + (this.dark_theme ? 25 : 70);\n        let bg_color = tinycolor(`hsl(${baseColor * 360}, 100%, ${lightness}%)`).toHexString();\n\n        if (cached_colors !== null && cached_colors[itemtype] !== null && cached_colors[itemtype][team_member['id']]) {\n            bg_color = cached_colors[itemtype][team_member['id']];\n        } else {\n            if (cached_colors === null) {\n                cached_colors = {\n                    User: {},\n                    Group: {},\n                    Supplier: {},\n                    Contact: {},\n                    _dark_theme: this.dark_theme\n                };\n            }\n            cached_colors[itemtype][team_member['id']] = bg_color;\n            window.sessionStorage.setItem('badge_colors', JSON.stringify(cached_colors));\n        }\n\n        return bg_color;\n    }\n\n    getBadgeCanvas(bg_color) {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.team_image_size;\n        canvas.height = this.team_image_size;\n        const context = canvas.getContext('2d');\n        context.strokeStyle = \"#f1f1f1\";\n        context.fillStyle = bg_color;\n        context.beginPath();\n        context.arc(this.team_image_size / 2, this.team_image_size / 2, this.team_image_size / 2, 0, 2 * Math.PI);\n        context.fill();\n        context.fillStyle = this.dark_theme ? 'white' : 'black';\n        context.textAlign = 'center';\n        context.font = `bold ${this.team_image_size / 2}px sans-serif`;\n        context.textBaseline = 'middle';\n        return canvas;\n    }\n\n    generateUserBadge(team_member) {\n        let initials = \"\";\n        if (team_member[\"firstname\"]) {\n            initials += team_member[\"firstname\"][0];\n        }\n        if (team_member[\"realname\"]) {\n            initials += team_member[\"realname\"][0];\n        }\n        // Force uppercase initals\n        initials = initials.toUpperCase();\n\n        if (!this.display_initials || initials.length === 0) {\n            return this.generateOtherBadge(team_member, 'ti ti-user');\n        }\n\n        const canvas = this.getBadgeCanvas(this.getBadgeColor(team_member));\n        const context = canvas.getContext('2d');\n        context.fillText(initials, this.team_image_size / 2, this.team_image_size / 2);\n        const src = canvas.toDataURL(\"image/png\");\n        const name = team_member['name'].replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n        return `<span><img src='${src}' title='${name}' data-bs-toggle='tooltip' data-bs-placement='top' data-placeholder-users-id='${team_member[\"id\"]}'/></span>`;\n    }\n\n    /**\n     * Generate team member icon based on its name and a FontAwesome icon.\n     * @param {{}} team_member The team member\n     * @param {string} icon FontAwesome icon to use for this badge\n     * @return {string} HTML icon of the generated badge\n     */\n    generateOtherBadge(team_member, icon) {\n        const bg_color = this.getBadgeColor(team_member);\n        const name = team_member['name'].replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n\n        return `\n            <span class=\"badge badge-pill\" style=\"background-color: ${bg_color}; font-size: ${(this.team_image_size / 2)}px; height: 26px; padding: 0.25em;\">\n                <i class='${icon}' title=\"${name}\" data-bs-toggle='tooltip' data-bs-placement='top'></i>\n            </span>\n        `;\n    }\n\n    /**\n     * Generate a badge to indicate that 'overflow_count' number of team members are not shown on the Kanban item.\n     * @param overflow_count Number of members without badges on the Kanban item\n     * @return {string} HTML image of the generated overflow badge\n     */\n    generateOverflowBadge(overflow_count) {\n        // Create fill color based on theme type\n        const lightness = (this.dark_theme ? 40 : 80);\n        const canvas = this.getBadgeCanvas(`hsl(255, 0%, ${lightness}%, 1)`);\n        const context = canvas.getContext('2d');\n        context.fillText(`+${overflow_count}`, this.team_image_size / 2, this.team_image_size / 2);\n        const src = canvas.toDataURL(\"image/png\");\n        return `<span class='position-relative'><img src='${src}' title='${__('%d other team members').replace('%d', overflow_count)}' data-bs-toggle='tooltip' data-bs-placement='top'></span>`;\n    }\n}\n"],"names":["__"],"sourceRoot":""}